---
export interface Props {
  images: string[] | undefined
  slug: string
  name: string
  interval?: number
}

const delay =
  typeof Astro.props.interval === "number" ? Astro.props.interval : 4000
const { images, slug, name } = Astro.props
const total = delay * (images?.length ?? 1)
---

<div
  class="relative w-[60svh] h-[42svh] rounded-2xl overflow-hidden"
  aria-label={`${name} screenshots`}
  role="img"
>
  {
    images?.map((src, i) => (
      <img
        src={`/images/${src}`}
        class="absolute inset-0 w-full h-full object-cover select-none will-change-opacity"
        style={`animation: fade ${total}ms ease-in-out infinite; animation-delay: ${i * delay}ms;`}
        loading={i === 0 ? "eager" : "lazy"}
        decoding="async"
        draggable="false"
      />
    ))
  }
</div>

<style>
  @keyframes fade {
    0% {
      opacity: 0;
      transform: scale(1.01);
    }
    8% {
      opacity: 1;
      transform: scale(1);
    }
    32% {
      opacity: 1;
      transform: scale(1);
    }
    40% {
      opacity: 0;
      transform: scale(1.01);
    }
    100% {
      opacity: 0;
      transform: scale(1.01);
    }
  }
</style>
